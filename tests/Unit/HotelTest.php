<?php

namespace Tests\Unit;

use App\User;
use Illuminate\Support\Str;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;

class HotelTest extends TestCase
{
    use DataBaseMigrations;
    protected $hotel;
    protected $token;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->hotel = factory(\App\Models\Hotel::class)->create();
        $this->artisan('passport:install');
        $user = factory(User::class)->create();
        $this->token = $user->createToken('TutsForWeb')->accessToken;
    }

    /**
     * Test can get hotel details.
     *
     * @return void
     */
    public function testGetHotelDetails()
    {
        $response = $this->get('api/hotels/'.$this->hotel->id);
        $response->assertStatus(200);
        $response->assertSee('HotelTest');
    }

    /**
     * Test can update hotel details.
     *
     * @return void
     */
    public function testUpdateHotelDetails()
    {
        $data = [
                'name' => 'HotelUpdated',
                'address' => 'taha hussien',
                'city' => 'minia',
                'country' => 'cairo',
                'state' => 'state',
                'zip_code' => 12345,
                'phone' => '010215478854',
                'email' => Str::random(10).'@yahoo.com',
                'image' => 'uploads/hotels/'.Str::random(100).'jpg',
            ];

        $response = $this->withHeaders([
            'Accept' => 'application/json',
            'Content-Type' => 'application/json',
            'Authorization' => 'Bearer ' . $this->token,
        ])->json('PUT', 'api/hotels/'.$this->hotel->id, $data);

        $response->assertJson([
            'status' =>  true
        ]);
    }

    /**
     * Test can get rooms .
     *
     * @return void
     */
    public function testGetRooms()
    {
        $response = $this->get('api/rooms');
        $response->assertStatus(200);
    }


//    And So on ....... other apis
}
